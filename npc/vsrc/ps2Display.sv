// Generated by CIRCT firtool-1.121.0
module ps2Codec(	// src/main/scala/PS2/PS2Connecter.scala:7:7
  input  [7:0] codecIO_inputValue,	// src/main/scala/PS2/PS2Connecter.scala:9:19
  output [7:0] codecIO_outputValue	// src/main/scala/PS2/PS2Connecter.scala:9:19
);

  assign codecIO_outputValue =
    codecIO_inputValue == 8'h3E
      ? 8'h38
      : codecIO_inputValue == 8'h46
          ? 8'h39
          : codecIO_inputValue == 8'h2E
              ? 8'h35
              : codecIO_inputValue == 8'h42
                  ? 8'h6B
                  : codecIO_inputValue == 8'h4B
                      ? 8'h6C
                      : codecIO_inputValue == 8'h1C
                          ? 8'h61
                          : codecIO_inputValue == 8'h3B
                              ? 8'h6A
                              : codecIO_inputValue == 8'h2C
                                  ? 8'h74
                                  : codecIO_inputValue == 8'h26
                                      ? 8'h33
                                      : codecIO_inputValue == 8'h43
                                          ? 8'h69
                                          : codecIO_inputValue == 8'h31
                                              ? 8'h6E
                                              : codecIO_inputValue == 8'h35
                                                  ? 8'h79
                                                  : codecIO_inputValue == 8'hF0
                                                      ? 8'h3F
                                                      : codecIO_inputValue == 8'h32
                                                          ? 8'h62
                                                          : codecIO_inputValue == 8'h3D
                                                              ? 8'h37
                                                              : codecIO_inputValue == 8'h21
                                                                  ? 8'h63
                                                                  : codecIO_inputValue == 8'h1D
                                                                      ? 8'h77
                                                                      : codecIO_inputValue == 8'h1B
                                                                          ? 8'h73
                                                                          : codecIO_inputValue == 8'h2A
                                                                              ? 8'h76
                                                                              : codecIO_inputValue == 8'h2D
                                                                                  ? 8'h72
                                                                                  : codecIO_inputValue == 8'h15
                                                                                      ? 8'h71
                                                                                      : codecIO_inputValue == 8'h3C
                                                                                          ? 8'h75
                                                                                          : codecIO_inputValue == 8'h36
                                                                                              ? 8'h36
                                                                                              : codecIO_inputValue == 8'h2B
                                                                                                  ? 8'h66
                                                                                                  : codecIO_inputValue == 8'h16
                                                                                                      ? 8'h31
                                                                                                      : codecIO_inputValue == 8'h24
                                                                                                          ? 8'h65
                                                                                                          : codecIO_inputValue == 8'h1A
                                                                                                              ? 8'h7A
                                                                                                              : codecIO_inputValue == 8'h25
                                                                                                                  ? 8'h34
                                                                                                                  : codecIO_inputValue == 8'h34
                                                                                                                      ? 8'h67
                                                                                                                      : codecIO_inputValue == 8'h3A
                                                                                                                          ? 8'h6D
                                                                                                                          : codecIO_inputValue == 8'h33
                                                                                                                              ? 8'h68
                                                                                                                              : codecIO_inputValue == 8'h45
                                                                                                                                  ? 8'h30
                                                                                                                                  : codecIO_inputValue == 8'h4D
                                                                                                                                      ? 8'h70
                                                                                                                                      : codecIO_inputValue == 8'h22
                                                                                                                                          ? 8'h78
                                                                                                                                          : codecIO_inputValue == 8'h1E
                                                                                                                                              ? 8'h32
                                                                                                                                              : codecIO_inputValue == 8'h23
                                                                                                                                                  ? 8'h64
                                                                                                                                                  : codecIO_inputValue == 8'h44
                                                                                                                                                      ? 8'h6F
                                                                                                                                                      : 8'h0;	// src/main/scala/PS2/PS2Connecter.scala:7:7, :58:25, src/main/scala/chisel3/util/Mux.scala:126:16
endmodule

module ps2Receiver(	// src/main/scala/PS2/PS2Connecter.scala:84:7
  input        clock,	// src/main/scala/PS2/PS2Connecter.scala:84:7
               reset,	// src/main/scala/PS2/PS2Connecter.scala:84:7
               receiverIO_din,	// src/main/scala/PS2/PS2Connecter.scala:86:20
  input  [1:0] receiverIO_clkin,	// src/main/scala/PS2/PS2Connecter.scala:86:20
  output [7:0] receiverIO_dout	// src/main/scala/PS2/PS2Connecter.scala:86:20
);

  reg  [8:0] tmpOut;	// src/main/scala/PS2/PS2Connecter.scala:92:21
  reg  [3:0] signalCount;	// src/main/scala/PS2/PS2Connecter.scala:94:28
  wire       _GEN = signalCount > 4'hA;	// src/main/scala/PS2/PS2Connecter.scala:94:28, :105:19
  always @(posedge clock) begin	// src/main/scala/PS2/PS2Connecter.scala:84:7
    if (reset) begin	// src/main/scala/PS2/PS2Connecter.scala:84:7
      tmpOut <= 9'h0;	// src/main/scala/PS2/PS2Connecter.scala:92:21
      signalCount <= 4'h0;	// src/main/scala/PS2/PS2Connecter.scala:94:28, :101:29
    end
    else begin	// src/main/scala/PS2/PS2Connecter.scala:84:7
      automatic logic _GEN_0;	// src/main/scala/PS2/PS2Connecter.scala:97:24
      _GEN_0 = receiverIO_clkin == 2'h2;	// src/main/scala/PS2/PS2Connecter.scala:97:24
      if (_GEN_0 & (|signalCount) & signalCount < 4'hA)	// src/main/scala/PS2/PS2Connecter.scala:92:21, :94:28, :97:{24,31}, :101:{11,16,29,35,50}
        tmpOut <= {receiverIO_din, tmpOut[8:1]};	// src/main/scala/PS2/PS2Connecter.scala:92:21, :101:{73,82}
      if (_GEN)	// src/main/scala/PS2/PS2Connecter.scala:105:19
        signalCount <= 4'h0;	// src/main/scala/PS2/PS2Connecter.scala:94:28, :101:29
      else if (_GEN_0)	// src/main/scala/PS2/PS2Connecter.scala:97:24
        signalCount <= signalCount + 4'h1;	// src/main/scala/PS2/PS2Connecter.scala:94:28, :99:30
    end
  end // always @(posedge)
  assign receiverIO_dout = _GEN & ~(^(tmpOut[7:0])) == tmpOut[8] ? tmpOut[7:0] : 8'h0;	// src/main/scala/PS2/PS2Connecter.scala:84:7, :92:21, :105:{19,25}, :110:{20,25,26,33,39,43,52}, :113:20
endmodule

module ps2Connecter(	// src/main/scala/PS2/PS2Connecter.scala:118:7
  input        clock,	// src/main/scala/PS2/PS2Connecter.scala:118:7
               reset,	// src/main/scala/PS2/PS2Connecter.scala:118:7
               io_ps2_clk,	// src/main/scala/PS2/PS2Connecter.scala:120:12
               io_ps2_data,	// src/main/scala/PS2/PS2Connecter.scala:120:12
  output [7:0] io_originOut,	// src/main/scala/PS2/PS2Connecter.scala:120:12
               io_out	// src/main/scala/PS2/PS2Connecter.scala:120:12
);

  wire [7:0] _ps2Receiver_receiverIO_dout;	// src/main/scala/PS2/PS2Connecter.scala:129:25
  reg  [1:0] clkReg;	// src/main/scala/PS2/PS2Connecter.scala:130:21
  always @(posedge clock) begin	// src/main/scala/PS2/PS2Connecter.scala:118:7
    if (reset)	// src/main/scala/PS2/PS2Connecter.scala:118:7
      clkReg <= 2'h0;	// src/main/scala/PS2/PS2Connecter.scala:130:21
    else	// src/main/scala/PS2/PS2Connecter.scala:118:7
      clkReg <= {clkReg[0], io_ps2_clk};	// src/main/scala/PS2/PS2Connecter.scala:130:21, :133:{17,21}
  end // always @(posedge)
  ps2Codec ps2Codec (	// src/main/scala/PS2/PS2Connecter.scala:128:22
    .codecIO_inputValue  (_ps2Receiver_receiverIO_dout),	// src/main/scala/PS2/PS2Connecter.scala:129:25
    .codecIO_outputValue (io_out)
  );	// src/main/scala/PS2/PS2Connecter.scala:128:22
  ps2Receiver ps2Receiver (	// src/main/scala/PS2/PS2Connecter.scala:129:25
    .clock            (clock),
    .reset            (reset),
    .receiverIO_din   (io_ps2_data),
    .receiverIO_clkin (clkReg),	// src/main/scala/PS2/PS2Connecter.scala:130:21
    .receiverIO_dout  (_ps2Receiver_receiverIO_dout)
  );	// src/main/scala/PS2/PS2Connecter.scala:129:25
  assign io_originOut = _ps2Receiver_receiverIO_dout;	// src/main/scala/PS2/PS2Connecter.scala:118:7, :129:25
endmodule

module displayEncodec(	// src/main/scala/displayCodec/displayCodec.scala:7:7
  input  [7:0] encodec_n,	// src/main/scala/displayCodec/displayCodec.scala:8:19
  input        encodec_en,	// src/main/scala/displayCodec/displayCodec.scala:8:19
  output [7:0] encodec_m	// src/main/scala/displayCodec/displayCodec.scala:8:19
);

  wire [255:0][7:0] _GEN =
    '{8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h8F,
      8'h9F,
      8'h7B,
      8'h9D,
      8'h3F,
      8'hEF,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'hF7,
      8'hFF,
      8'hE1,
      8'hBF,
      8'hB7,
      8'h67,
      8'hF3,
      8'hDB,
      8'h61,
      8'hFD,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0,
      8'h0};	// src/main/scala/displayCodec/displayCodec.scala:34:60
  assign encodec_m = encodec_en & (|_GEN[encodec_n]) ? _GEN[encodec_n] : 8'h1;	// src/main/scala/displayCodec/displayCodec.scala:7:7, :34:{19,31,60}
endmodule

module displayCodecTop(	// src/main/scala/displayCodec/displayCodec.scala:48:7
  input  [7:0] encodeIO_n,	// src/main/scala/displayCodec/displayCodec.scala:49:20
  input        encodeIO_en,	// src/main/scala/displayCodec/displayCodec.scala:49:20
  output [7:0] encodeIO_m	// src/main/scala/displayCodec/displayCodec.scala:49:20
);

  wire [7:0] _displayEncodec_encodec_m;	// src/main/scala/displayCodec/displayCodec.scala:55:30
  displayEncodec displayEncodec (	// src/main/scala/displayCodec/displayCodec.scala:55:30
    .encodec_n  (encodeIO_n),
    .encodec_en (encodeIO_en),
    .encodec_m  (_displayEncodec_encodec_m)
  );	// src/main/scala/displayCodec/displayCodec.scala:55:30
  assign encodeIO_m = ~_displayEncodec_encodec_m;	// src/main/scala/displayCodec/displayCodec.scala:48:7, :55:30, :58:17
endmodule

module ps2Display(	// src/main/scala/PS2/PS2Display.scala:9:7
  input        clock,	// src/main/scala/PS2/PS2Display.scala:9:7
               reset,	// src/main/scala/PS2/PS2Display.scala:9:7
               io_ps2_clk,	// src/main/scala/PS2/PS2Display.scala:10:12
               io_ps2_data,	// src/main/scala/PS2/PS2Display.scala:10:12
               io_en,	// src/main/scala/PS2/PS2Display.scala:10:12
  output [7:0] io_ps2_out,	// src/main/scala/PS2/PS2Display.scala:10:12
               io_seg0_out,	// src/main/scala/PS2/PS2Display.scala:10:12
               io_seg1_out,	// src/main/scala/PS2/PS2Display.scala:10:12
               io_seg2_out,	// src/main/scala/PS2/PS2Display.scala:10:12
               io_seg3_out,	// src/main/scala/PS2/PS2Display.scala:10:12
               io_seg4_out,	// src/main/scala/PS2/PS2Display.scala:10:12
               io_seg5_out	// src/main/scala/PS2/PS2Display.scala:10:12
);

  wire [7:0]       _ps2Connecter_io_originOut;	// src/main/scala/PS2/PS2Display.scala:45:26
  wire [7:0]       _ps2Connecter_io_out;	// src/main/scala/PS2/PS2Display.scala:45:26
  wire [15:0][7:0] _GEN =
    '{8'h66,
      8'h65,
      8'h64,
      8'h63,
      8'h62,
      8'h61,
      8'h39,
      8'h38,
      8'h37,
      8'h36,
      8'h35,
      8'h34,
      8'h33,
      8'h32,
      8'h31,
      8'h30};
  reg  [7:0]       charCount;	// src/main/scala/PS2/PS2Display.scala:53:24
  reg  [7:0]       currentChar;	// src/main/scala/PS2/PS2Display.scala:61:26
  reg  [7:0]       currentMakeCode;	// src/main/scala/PS2/PS2Display.scala:62:30
  reg              displayLock;	// src/main/scala/PS2/PS2Display.scala:64:26
  reg  [7:0]       breakCodeStatus;	// src/main/scala/PS2/PS2Display.scala:66:30
  always @(posedge clock) begin	// src/main/scala/PS2/PS2Display.scala:9:7
    if (reset) begin	// src/main/scala/PS2/PS2Display.scala:9:7
      charCount <= 8'h0;	// src/main/scala/PS2/PS2Display.scala:53:24
      currentChar <= 8'h0;	// src/main/scala/PS2/PS2Display.scala:61:26
      currentMakeCode <= 8'h0;	// src/main/scala/PS2/PS2Display.scala:62:30
      displayLock <= 1'h0;	// src/main/scala/PS2/PS2Display.scala:64:26
      breakCodeStatus <= 8'h0;	// src/main/scala/PS2/PS2Display.scala:66:30
    end
    else begin	// src/main/scala/PS2/PS2Display.scala:9:7
      automatic logic _GEN_0;	// src/main/scala/PS2/PS2Display.scala:73:33
      automatic logic _GEN_1 = (|_ps2Connecter_io_out) & _ps2Connecter_io_out != 8'h3F;	// src/main/scala/PS2/PS2Display.scala:45:26, :80:{32,39,61}
      automatic logic _GEN_2;	// src/main/scala/PS2/PS2Display.scala:61:26, :69:30, :73:41, :80:69
      automatic logic _GEN_3;	// src/main/scala/PS2/PS2Display.scala:53:24, :80:69, :87:32, :88:16
      _GEN_0 = _ps2Connecter_io_out == 8'h3F;	// src/main/scala/PS2/PS2Display.scala:45:26, :73:33
      _GEN_2 = (|breakCodeStatus) | _GEN_0;	// src/main/scala/PS2/PS2Display.scala:61:26, :66:30, :69:{23,30}, :73:{33,41}, :80:69
      _GEN_3 = _GEN_1 & ~displayLock;	// src/main/scala/PS2/PS2Display.scala:53:24, :64:26, :80:{39,69}, :87:{11,32}, :88:16
      if (_GEN_2 | ~_GEN_3) begin	// src/main/scala/PS2/PS2Display.scala:53:24, :61:26, :69:30, :73:41, :80:69, :87:32, :88:16
      end
      else	// src/main/scala/PS2/PS2Display.scala:53:24, :69:30, :73:41, :80:69
        charCount <= charCount + 8'h1;	// src/main/scala/PS2/PS2Display.scala:53:24, :88:27
      if (_GEN_2 | ~_GEN_1) begin	// src/main/scala/PS2/PS2Display.scala:61:26, :62:30, :69:30, :73:41, :80:{39,69}
      end
      else begin	// src/main/scala/PS2/PS2Display.scala:62:30, :69:30, :73:41, :80:69
        currentChar <= _ps2Connecter_io_out;	// src/main/scala/PS2/PS2Display.scala:45:26, :61:26
        currentMakeCode <= _ps2Connecter_io_originOut;	// src/main/scala/PS2/PS2Display.scala:45:26, :62:30
      end
      if (|breakCodeStatus)	// src/main/scala/PS2/PS2Display.scala:66:30, :69:23
        breakCodeStatus <= breakCodeStatus - 8'h1;	// src/main/scala/PS2/PS2Display.scala:66:30, :70:37
      else begin	// src/main/scala/PS2/PS2Display.scala:69:23
        displayLock <= ~_GEN_0 & (_GEN_3 | displayLock);	// src/main/scala/PS2/PS2Display.scala:53:24, :64:26, :73:{33,41}, :75:18, :80:69, :87:32, :88:16, :89:18
        if (_GEN_0)	// src/main/scala/PS2/PS2Display.scala:73:33
          breakCodeStatus <= 8'hFF;	// src/main/scala/PS2/PS2Display.scala:66:30
      end
    end
  end // always @(posedge)
  ps2Connecter ps2Connecter (	// src/main/scala/PS2/PS2Display.scala:45:26
    .clock        (clock),
    .reset        (reset),
    .io_ps2_clk   (io_ps2_clk),
    .io_ps2_data  (io_ps2_data),
    .io_originOut (_ps2Connecter_io_originOut),
    .io_out       (_ps2Connecter_io_out)
  );	// src/main/scala/PS2/PS2Display.scala:45:26
  displayCodecTop segGroup_0 (	// src/main/scala/PS2/PS2Display.scala:47:25
    .encodeIO_n  (_GEN[currentMakeCode[3:0]]),	// src/main/scala/PS2/PS2Display.scala:62:30, :94:{25,55}
    .encodeIO_en (displayLock),	// src/main/scala/PS2/PS2Display.scala:64:26
    .encodeIO_m  (io_seg0_out)
  );	// src/main/scala/PS2/PS2Display.scala:47:25
  displayCodecTop segGroup_1 (	// src/main/scala/PS2/PS2Display.scala:47:25
    .encodeIO_n  (_GEN[currentMakeCode[7:4]]),	// src/main/scala/PS2/PS2Display.scala:62:30, :96:{25,55}
    .encodeIO_en (displayLock),	// src/main/scala/PS2/PS2Display.scala:64:26
    .encodeIO_m  (io_seg1_out)
  );	// src/main/scala/PS2/PS2Display.scala:47:25
  displayCodecTop segGroup_2 (	// src/main/scala/PS2/PS2Display.scala:47:25
    .encodeIO_n  (_GEN[currentChar[3:0]]),	// src/main/scala/PS2/PS2Display.scala:61:26, :98:{25,51}
    .encodeIO_en (displayLock),	// src/main/scala/PS2/PS2Display.scala:64:26
    .encodeIO_m  (io_seg2_out)
  );	// src/main/scala/PS2/PS2Display.scala:47:25
  displayCodecTop segGroup_3 (	// src/main/scala/PS2/PS2Display.scala:47:25
    .encodeIO_n  (_GEN[currentChar[7:4]]),	// src/main/scala/PS2/PS2Display.scala:61:26, :100:{25,51}
    .encodeIO_en (displayLock),	// src/main/scala/PS2/PS2Display.scala:64:26
    .encodeIO_m  (io_seg3_out)
  );	// src/main/scala/PS2/PS2Display.scala:47:25
  displayCodecTop segGroup_4 (	// src/main/scala/PS2/PS2Display.scala:47:25
    .encodeIO_n  (_GEN[charCount[3:0]]),	// src/main/scala/PS2/PS2Display.scala:53:24, :102:{25,49}
    .encodeIO_en (io_en),
    .encodeIO_m  (io_seg4_out)
  );	// src/main/scala/PS2/PS2Display.scala:47:25
  displayCodecTop segGroup_5 (	// src/main/scala/PS2/PS2Display.scala:47:25
    .encodeIO_n  (_GEN[charCount[7:4]]),	// src/main/scala/PS2/PS2Display.scala:53:24, :103:{25,49}
    .encodeIO_en (io_en),
    .encodeIO_m  (io_seg5_out)
  );	// src/main/scala/PS2/PS2Display.scala:47:25
  assign io_ps2_out = _ps2Connecter_io_out;	// src/main/scala/PS2/PS2Display.scala:9:7, :45:26
endmodule

