// Generated by CIRCT firtool-1.121.0
module ps2Codec(	// src/main/scala/PS2/PS2Connecter.scala:7:7
  input  [7:0] codecIO_inputValue,	// src/main/scala/PS2/PS2Connecter.scala:9:19
  output [7:0] codecIO_outputValue	// src/main/scala/PS2/PS2Connecter.scala:9:19
);

  assign codecIO_outputValue =
    codecIO_inputValue == 8'h31
      ? 8'h16
      : codecIO_inputValue == 8'h35
          ? 8'h2E
          : codecIO_inputValue == 8'h38
              ? 8'h3E
              : codecIO_inputValue == 8'h62
                  ? 8'h32
                  : codecIO_inputValue == 8'h34
                      ? 8'h25
                      : codecIO_inputValue == 8'h61
                          ? 8'h1C
                          : codecIO_inputValue == 8'h30
                              ? 8'h45
                              : codecIO_inputValue == 8'h33
                                  ? 8'h26
                                  : codecIO_inputValue == 8'h39
                                      ? 8'h46
                                      : codecIO_inputValue == 8'h63
                                          ? 8'h21
                                          : codecIO_inputValue == 8'h64
                                              ? 8'h23
                                              : codecIO_inputValue == 8'h66
                                                  ? 8'h2B
                                                  : codecIO_inputValue == 8'h65
                                                      ? 8'h24
                                                      : codecIO_inputValue == 8'h37
                                                          ? 8'h3D
                                                          : codecIO_inputValue == 8'h36
                                                              ? 8'h36
                                                              : codecIO_inputValue == 8'h32
                                                                  ? 8'h1E
                                                                  : 8'h0;	// src/main/scala/PS2/PS2Connecter.scala:7:7, :37:25, :41:25, src/main/scala/chisel3/util/Mux.scala:126:16
endmodule

module ps2Sim(	// src/main/scala/PS2/PS2Sim.scala:8:7
  input        clock,	// src/main/scala/PS2/PS2Sim.scala:8:7
               reset,	// src/main/scala/PS2/PS2Sim.scala:8:7
  input  [7:0] simIO_inputChar,	// src/main/scala/PS2/PS2Sim.scala:9:15
  output       simIO_ps2_dout,	// src/main/scala/PS2/PS2Sim.scala:9:15
               simIO_ps2_clk	// src/main/scala/PS2/PS2Sim.scala:9:15
);

  wire [7:0] _ps2Encoder_codecIO_outputValue;	// src/main/scala/PS2/PS2Sim.scala:20:24
  reg        initialClk;	// src/main/scala/PS2/PS2Sim.scala:16:25
  reg        tmpData;	// src/main/scala/PS2/PS2Sim.scala:17:22
  reg  [4:0] initialCnt;	// src/main/scala/PS2/PS2Sim.scala:18:25
  reg  [3:0] dataIndex;	// src/main/scala/PS2/PS2Sim.scala:19:24
  always @(posedge clock) begin	// src/main/scala/PS2/PS2Sim.scala:8:7
    if (reset) begin	// src/main/scala/PS2/PS2Sim.scala:8:7
      initialClk <= 1'h0;	// src/main/scala/PS2/PS2Sim.scala:16:25
      tmpData <= 1'h0;	// src/main/scala/PS2/PS2Sim.scala:17:22
      initialCnt <= 5'h1;	// src/main/scala/PS2/PS2Sim.scala:18:25, :33:27
      dataIndex <= 4'h0;	// src/main/scala/PS2/PS2Sim.scala:19:24
    end
    else begin	// src/main/scala/PS2/PS2Sim.scala:8:7
      automatic logic [10:0] finalData = {1'h0, _ps2Encoder_codecIO_outputValue, 2'h2};	// src/main/scala/PS2/PS2Sim.scala:20:24, :26:34
      automatic logic        _GEN = initialCnt < 5'h16;	// src/main/scala/PS2/PS2Sim.scala:18:25, :28:18
      automatic logic [10:0] _GEN_0 = {7'h0, dataIndex};	// src/main/scala/PS2/PS2Sim.scala:19:24, :30:23
      automatic logic [10:0] _tmpData_T_2 = finalData >> _GEN_0;	// src/main/scala/PS2/PS2Sim.scala:26:34, :30:23, :40:23
      automatic logic [10:0] _tmpData_T = finalData >> _GEN_0;	// src/main/scala/PS2/PS2Sim.scala:26:34, :30:23
      initialClk <= _GEN & ~initialClk;	// src/main/scala/PS2/PS2Sim.scala:16:25, :28:{18,24}, :29:{15,18}, :42:15
      tmpData <= _GEN ? _tmpData_T[0] : _tmpData_T_2[0];	// src/main/scala/PS2/PS2Sim.scala:17:22, :28:{18,24}, :30:{12,23}, :40:{12,23}
      initialCnt <= _GEN ? {4'h0, initialClk - 1'h1} : 5'h0;	// src/main/scala/PS2/PS2Sim.scala:16:25, :18:25, :28:{18,24}, :35:{15,27}, :41:15
      if (_GEN) begin	// src/main/scala/PS2/PS2Sim.scala:28:18
        automatic logic [4:0] _GEN_1 = initialCnt % 5'h2;	// src/main/scala/PS2/PS2Sim.scala:18:25, :32:20
        if (_GEN_1[1:0] == 2'h0 & (|initialCnt))	// src/main/scala/PS2/PS2Sim.scala:18:25, :32:{20,24,31,45}
          dataIndex <= dataIndex + 4'h1;	// src/main/scala/PS2/PS2Sim.scala:19:24, :33:27
      end
      else	// src/main/scala/PS2/PS2Sim.scala:28:18
        dataIndex <= 4'h0;	// src/main/scala/PS2/PS2Sim.scala:19:24
    end
  end // always @(posedge)
  ps2Codec ps2Encoder (	// src/main/scala/PS2/PS2Sim.scala:20:24
    .codecIO_inputValue  (simIO_inputChar),
    .codecIO_outputValue (_ps2Encoder_codecIO_outputValue)
  );	// src/main/scala/PS2/PS2Sim.scala:20:24
  assign simIO_ps2_dout = tmpData;	// src/main/scala/PS2/PS2Sim.scala:8:7, :17:22
  assign simIO_ps2_clk = initialClk;	// src/main/scala/PS2/PS2Sim.scala:8:7, :16:25
endmodule

